services:
  # Next.js Frontend
  frontend:
    # Use pre-built image from GitHub Container Registry
    # For development, comment out 'image' and uncomment 'build' section
    image: ghcr.io/killcity/doroboto-frontend:latest
    # build:
    #   context: ./doroboto-ui
    #   dockerfile: Dockerfile.frontend
    container_name: doroboto-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:5001
    volumes:
      - ./doroboto-ui/src:/app/src
      - ./doroboto-ui/public:/app/public
      - ./doroboto-ui/package.json:/app/package.json
      - ./doroboto-ui/package-lock.json:/app/package-lock.json
      - ./doroboto-ui/next.config.js:/app/next.config.js
      - ./doroboto-ui/tailwind.config.ts:/app/tailwind.config.ts
      - ./doroboto-ui/tsconfig.json:/app/tsconfig.json
      - ./doroboto-ui/postcss.config.mjs:/app/postcss.config.mjs
      # Named volumes for node_modules and .next to persist across container restarts
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/.next
      # Persist Next.js cache for faster rebuilds
      - frontend_next_cache:/app/.next
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - doroboto-network

  # Node.js Backend
  backend:
    # Use pre-built image from GitHub Container Registry
    # For development, comment out 'image' and uncomment 'build' section
    image: ghcr.io/killcity/doroboto-backend:latest
    # build:
    #   context: ./doroboto-ui
    #   dockerfile: Dockerfile.backend
    container_name: doroboto-backend
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - PORT=5001
    volumes:
      - ./doroboto-ui/uploads:/app/uploads
      - ./doroboto-ui/test_files:/app/test_files
      - ./doroboto-ui/backend:/app/backend
      - ./doroboto-ui/package.json:/app/package.json
      - ./doroboto-ui/package-lock.json:/app/package-lock.json
      # Named volume for node_modules
      - backend_node_modules:/app/node_modules
    restart: unless-stopped
    networks:
      - doroboto-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  frontend_node_modules:
  frontend_next:
  backend_node_modules:
  frontend_next_cache:
    driver: local

networks:
  doroboto-network:
    driver: bridge 